pipeline {
    agent any

    environment {
        DOTENV = readFile('src/connections/.env').split("\n").collectEntries { entry ->
            def pair = entry.split("=")
            [(pair.first().trim()): pair.last().trim()]
        }
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scm
            }
        }
        stage('Build Docker Image') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-hub-credentials', usernameVariable: 'DOCKER_HUB_USERNAME', passwordVariable: 'DOCKER_HUB_PASSWORD')]) {
                    script {
                        sh 'docker build -t ${DOCKER_HUB_USERNAME}/your-image-name .'
                    }
                }
            }
        }
        stage('Push to Docker Hub') {
            steps {
                withCredentials([usernamePassword(credentialsId: 'docker-hub-credentials', usernameVariable: 'DOCKER_HUB_USERNAME', passwordVariable: 'DOCKER_HUB_PASSWORD')]) {
                    script {
                        sh 'echo $DOCKER_HUB_PASSWORD | docker login -u $DOCKER_HUB_USERNAME --password-stdin'
                        sh 'docker push ${DOCKER_HUB_USERNAME}/your-image-name'
                    }
                }
            }
        }
    }
}
